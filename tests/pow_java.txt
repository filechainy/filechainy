import java.security.MessageDigest;

public class Block {
    private String data;
    private String previousHash;
    private String hash;
    private long timestamp;
    private int nonce;

    public Block(String data, String previousHash) {
        this.data = data;
        this.previousHash = previousHash;
        this.timestamp = System.currentTimeMillis();
        this.nonce = 0;
        this.hash = calculateHash();
    }

    public String calculateHash() {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            String input = data + previousHash + timestamp + nonce;
            byte[] hashBytes = digest.digest(input.getBytes("UTF-8"));

            StringBuffer buffer = new StringBuffer();
            for (int i = 0; i < hashBytes.length; i++) {
                buffer.append(Integer.toString((hashBytes[i] & 0xff) + 0x100, 16).substring(1));
            }
            return buffer.toString();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    public void mineBlock(int difficulty) {
        String target = new String(new char[difficulty]).replace('\0', '0');
        while (!hash.substring(0, difficulty).equals(target)) {
            nonce++;
            hash = calculateHash();
        }
        System.out.println("Block mined: " + hash);
    }
}
